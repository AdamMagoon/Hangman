'''
Created on Nov 6, 2014

@author: amagoon
'''

#    The complete hang-man grid in one list, accessible by index
#    Will return the relevant string to be printed out to console.
def grid(number):
    man = ['', ' O', ' O\n |', ' O\n\\|', ' O\n\\|/', ' O\n\\|/\n |', ' O\n\\|/\n |\n/', ' O\n\\|/\n |\n/ \\']
    return man[number]


#    Tests whether the guessed letter is correct or not
#    Return: Updated drawing board to be printed to console
#    Also returns a 'result' as either True or False
def test_letter(gameword, userguess, drawing_board):
    result = False
    for letter in range(len(gameword)):
        if gameword[letter] == userguess:
            result = True
            drawing_board[letter] = userguess
    return drawing_board, result


#    Converts guess to uppercase and checks whether the input is more than one character
#    Return: the guessed letter
def guess(list):
    #    Assigns the user input to a variable
    user_guess = input().upper()
    if len(user_guess) > 1:
        print('Only one guess is allowed at a time.')
        #    Recursion!
        initiate_guess()
    for i in range(len(list)):
        #    If letter matches a letter in the list
        #    return True
        if user_guess == list[i]:
            print('You have already guessed that letter. Please guess again.')
            user_guess = initiate_guess(list)
            break
    return user_guess
        
        
#    Prompts user to input guess
#    Calls on the guess() function to ensure
#    all parameters are valid
#    Return: The users guessed letter
def initiate_guess(list):
    print('What is your guess?')
    uguess = guess(list)
    return uguess

#    Converts each character in a word to spaces
#    Return: list with hidden spaces to print to console
#    Have the possibility to add a 'space' check within this function
#        Ex. - While iterating, check to see if character is blank space
def hidden_word(word):
    hidden_list = []
    for i in word:
        hidden_list.append('_')
    return hidden_list


#    Simple function to print our 'board' to console
def print_board(board):
    print('\n' + ' '.join(board))
    
    
#    Pulls together all functions and runs game
def start():
    print('Enter the word you would like to use.')
    #    Allows the user to set the word to guess (for now)
    #    Converts the word into all upper case for usability
    #    Stores this value to be accessed later
    global_word = list(input().upper())
    
    #    Creates our initial 'drawing board' using the hidden_word() function
    #    Creates a series of underscores to represent letters not guessed yet
    drawing_board = hidden_word(global_word)
    i = 0
    
    #    Creates an empty list to hold letters already guessed
    guessed_letters = []
    
    while i < 7:
        #    Only print guessed letters if the user has guessed at least one letter
        if len(guessed_letters) > 0:
            print('Guessed Letters: ' + ', '.join(guessed_letters))
        
        #    This will print a new grid (the hangman guy) during each new
        #    iteration of the while loop
        print(grid(i))
        
        #    Prints an updated board after each turn
        print_board(drawing_board)
        #    As long as the person has not guessed the entire word
        #    continue into the if statement
        if drawing_board != global_word:
            #    Initiate new user guess and store guess into users_guess variable
            users_guess = initiate_guess(guessed_letters)
            #    Also return whether it was a correct or incorrect guess
            drawing_board, result = test_letter(global_word, users_guess, drawing_board)
            #    Add the guess to the guessed_letters list
            guessed_letters.append(str(users_guess))
            #    If the user guess was incorrect, continue into the if statement
            if result == False:
                #    Initiate a new iteration
                i += 1
                print("Wrong!")
            else:
                print("Correct!")
        else:
            print("Game Over! You win!")
            break
    else:
        print(grid(7))
        print("He's dead. You suck.")
        
start()
